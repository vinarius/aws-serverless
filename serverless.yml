org: vinarius
app: aws-serverless
service: aws-serverless

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  # cfnRole: arn:aws:iam::#{AWS::AccountId}:role/CFN-Serverless-Role # Causes error 'Cross-account pass role is not allowed' - Might need to use STS.
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  environment:
    accountId: "#{AWS::AccountId}"
    BUCKET_NAME: ${env:BUCKET_NAME}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:${self:provider.environment.accountId}:table/Characters"
        - "arn:aws:dynamodb:${self:provider.region}:${self:provider.environment.accountId}:table/Houses"
        - "arn:aws:dynamodb:${self:provider.region}:${self:provider.environment.accountId}:table/Spells"

plugins:
  - serverless-s3-sync
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin
  - invoke-conjure-lambda

functions:
  conjure:
    handler: conjure.conjure

resources:
  # Raw cloud formation goes here
  Resources:
    # Project S3 Bucket
    MyS3Bucket:
      Type: 'AWS::S3::Bucket'
      Properties:
        BucketName: ${self:provider.environment.BUCKET_NAME}

    # Houses Table
    HousesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Houses'

    # Characters Table
    CharactersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: 'Characters'

    # Spells Table
    SpellsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: 'Spells'

custom:
  stage: ${opt:stage, self:provider.stage}
  s3Sync:
    - bucketName: ${self:provider.environment.BUCKET_NAME}
      localDir: data